name: CI

on:
  pull_request:

defaults:
  run:
    shell: bash

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          # Linux targets
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-24.04
            arch: amd64
          - target: i686-unknown-linux-gnu
            os: ubuntu-24.04
            arch: i386
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04
            arch: arm64
          # Windows targets
          - target: x86_64-pc-windows-gnu
            os: ubuntu-24.04
            arch: amd64
          - target: i686-pc-windows-gnu
            os: ubuntu-24.04
            arch: i386
          # macOS targets
          - target: x86_64-apple-darwin
            os: macos-latest
            arch: amd64
          - target: aarch64-apple-darwin
            os: macos-latest
            arch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        components: rustfmt,clippy

    - name: Format
      run: cargo fmt --all -- --check

    - name: Install cross-compilation dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-multilib
        
        # Install cross-compilation tools for different architectures
        if [[ "${{ matrix.target }}" == "i686-unknown-linux-gnu" ]]; then
          sudo apt-get install -y gcc-i686-linux-gnu
        elif [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
          sudo apt-get install -y gcc-aarch64-linux-gnu
        elif [[ "${{ matrix.target }}" == *"windows"* ]]; then
          sudo apt-get install -y gcc-mingw-w64
        fi

    - name: Build binary
      run: cargo build --target ${{ matrix.target }}

    - name: Test
      run: |
          cargo test 

    - name: Clippy
      run: cargo clippy --all-targets -- --deny warnings
